name: Tests

on:
  pull_request:

  push:
    branches:
      - master

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.10"]
        mpi: [mpich, openmpi]
        jax-version: ["latest"]

        include:
          # test intelmpi
          - os: ubuntu-18.04
            python-version: "3.10"
            mpi: intelmpi
            jax-version: "latest"
          # test older JAX and Python versions
          - os: ubuntu-latest
            python-version: "3.6"
            mpi: openmpi
            jax-version: "0.2.17"  # last version with Python 3.6 support

    env:
       MPICH_INTERFACE_HOSTNAME: localhost

    steps:
      - uses: actions/checkout@v2

      # make sure tags are fetched so we can get a version
      - run: |
          git fetch --prune --unshallow --tags

      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install MPI (${{ matrix.mpi }})
        run: |
          sh ./conf/travis-install-mpi.sh ${{ matrix.mpi }}

      - name: Pip install python dependencies
        run: |
          if [ ${{ matrix.mpi }} == 'intelmpi' ]; then
            source ${HOME}/intel/compilers_and_libraries/linux/mpi/intel64/bin/mpivars.sh -ofi_internal=1 release
          fi

          python -m pip install --upgrade pip
          if [ ${{ matrix.jax-version }} == 'latest' ]; then
            pip install jax[cpu]
          else
            pip install jax[cpu]==${{ matrix.jax-version }}
          fi
          pip install .[dev]

      - name: Single-execution test with pytest
        timeout-minutes: 5
        run: |
          if [ ${{ matrix.mpi }} == 'intelmpi' ]; then
            source ${HOME}/intel/compilers_and_libraries/linux/mpi/intel64/bin/mpivars.sh -ofi_internal=1 release
          fi
          pytest .

      - name: mpirun test with pytest
        timeout-minutes: 5
        run: |
          if [ ${{ matrix.mpi }} == 'intelmpi' ]; then
            source ${HOME}/intel/compilers_and_libraries/linux/mpi/intel64/bin/mpivars.sh -ofi_internal=1 release
            mpirun -v -np 2 pytest .
          else
            mpirun -host localhost:2 -v -np 2 pytest .
          fi
